import { Component } from '@angular/core';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { ActivatedRoute } from '@angular/router'; // üî• –î–û–ë–ê–í–õ–ï–ù–û –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∏–∑ URL
import { CommonModule } from '@angular/common'; // –î–û–ë–ê–í–ò–¢–¨ –∏–º–ø–æ—Ä—Ç

@Component({
  selector: 'app-uneditable-account',
  standalone: true, // –°–∫–∞–∑–∞—Ç—å Angular, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–∞–º –ø–æ —Å–µ–±–µ
  imports: [CommonModule], // –ü–û–î–ö–õ–Æ–ß–ò–¢–¨ CommonModule
  templateUrl: './uneditable-account.component.html',
})
export class UneditableAccountComponent {
  user: any;
  universities: any[] = [];

  // üî• –î–û–ë–ê–í–õ–ï–ù–û –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—é–º–µ
  selectedFile: File | null = null;
  uploadSuccessMessage: string = '';
  uploadErrorMessage: string = '';

  constructor(private http: HttpClient, private route: ActivatedRoute) {
    // üî• –î–û–ë–ê–í–õ–ï–ù–û: –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–∞–∑—É –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
    const userId = this.route.snapshot.paramMap.get('id');
    if (userId) {
      this.http.get(`/api/account/${userId}/`).subscribe({
        next: (data: any) => {
          this.user = data;
          this.universities = data.universities || [];
        },
        error: (error: HttpErrorResponse) => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        }
      });
    }
  }

  getStudentUniversity(universityId: number): any {
  return this.universities.find((u) => u.id === universityId) || null;
  }

  // üî• –î–û–ë–ê–í–õ–ï–ù–û: –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
  onFileSelected(event: Event): void {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files.length > 0) {
      this.selectedFile = input.files[0];
    }
  }

  // üî• –î–û–ë–ê–í–õ–ï–ù–û: –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  onResumeUpload(event: Event): void {
    event.preventDefault();

    this.uploadSuccessMessage = '';
    this.uploadErrorMessage = '';

    if (!this.selectedFile) {
      this.uploadErrorMessage = '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω.';
      return;
    }

    const formData = new FormData();
    formData.append('file', this.selectedFile);

    this.http.post<any>('/upload-resume/', formData).subscribe({
      next: (response) => {
        this.uploadSuccessMessage = response.message || '–†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!';
      },
      error: (error: HttpErrorResponse) => {
  if (error.status === 413) {
    this.uploadErrorMessage = '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞.';
  } else if (error.status === 415) {
    this.uploadErrorMessage = '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –î–æ–ø—É—Å—Ç–∏–º—ã PDF, DOC –∏–ª–∏ DOCX.';
  } else if (error.status === 400 && error.error?.error) {
    this.uploadErrorMessage = `–û—à–∏–±–∫–∞: ${error.error.error}`;
  } else {
    this.uploadErrorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∑—é–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.';
  }
  console.log(error);
      }
    });
  }
}
