services:
  backend:
    build: ./web
    container_name: linkedin-django
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DJANGO_USE_POSTGRES: ${DJANGO_USE_POSTGRES}
      DJANGO_PG_NAME: ${DJANGO_PG_NAME}
      DJANGO_PG_USER: ${DJANGO_PG_USER}
      DJANGO_PG_PASSWORD: ${DJANGO_PG_PASSWORD}
      DJANGO_PG_HOST: ${DJANGO_PG_HOST}
      DJANGO_PG_PORT: ${DJANGO_PG_PORT}
    env_file:
      - ./web/.env
    ports:
        - "8000:8000"
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DJANGO_PG_USER}
      POSTGRES_PASSWORD: ${DJANGO_PG_PASSWORD}
      POSTGRES_DB: ${DJANGO_PG_NAME}
    container_name: linkedin-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./web/.env
  frontend:
    build: ./web_frontend
    container_name: linkedin-ng
    ports:
      - "8080:8080"
    depends_on:
      - backend
volumes:
  postgres_data:
